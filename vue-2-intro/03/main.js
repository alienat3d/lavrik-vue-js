let sample = new Vue({
	el: '.sample',
	data: {
		showH2: true,
		numbers: []
	},
	methods: {
		addNumber() {
			// Math.random() * 11 даёт числа от 0 до 11, Math.floor() даёт целые числа от 0 до 10, включая 0 и 10 с равно вероятностью, что важно, а - 5 смещает диапазон до нужного. Ну и далее пушим это число в массив "numbers", чтобы они появлялись в вёрстке
			// ? Также стоит помнить, что метод принимает объект события и мы можем также им воспользоваться, как и в обычном JS, например, чтобы при помощи evt.target что-то сделать с объектом, вызывающим это событие (в данном случае с кнопкой).
			let rnd = Math.floor(Math.random() * 11) - 5;
			this.numbers.push(rnd);
		}
	},
	computed: {
		// Но нам также нужно считать сумму всех чисел, чтобы показывать текущий "счёт" пользователя.
		// ? Обратим внимание на "this" также в цикле, который нам нужен, чтобы дотянуться до поля массива "numbers"
		// Далее алгоритм простой, мы к сумме прибавляем numbers[i], т.о. суммируя все числа массива numbers.
		sum() {
			console.log('1');
			let sum = 0;

			for (let i = 0; i < this.numbers.length; i++) {
				sum += this.numbers[i];
			}

			return sum;
		},
		btnText() {
			return this.showH2 ? 'Hide result' : 'Show result';
		}
	}
});