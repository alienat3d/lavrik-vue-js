// 1.2 В этом файле мы импортируем все нужные компоненты страниц и пропишем собственно объекты путей к ним в объектах в массиве "routes".
/* ? 1.3 При импорте History предлагается 3 варианта: 
	- "createMemoryHistory" (режим работы не связанный с адресной строкой, а просто информация о текущей странице будет во внутренней переменной храниться (кнопки браузера "вперёд" & "назад" работать не будут));
	- "createWebHashHistory" (роутер будет добавлять адрес страницы после решётки);
	- "createWebHistory" (режим работы в API History - без перезагрузки страницы адрес будет меняться).
	Выбор здесь довольно очевиден: MemoryHistory - мы почти никогда не используем (это нужно в редких случаях, когда мы не имеем права трогать адресную строку), WebHashHistory — используем, когда мы делаем приложение на Vue в рамках многостраничного сайта, в котором мы не имеем права менять URL страниц на лету, а если у нас SPA, то WebHistory наш выбор. ↓
*/
import { createRouter, createWebHistory } from 'vue-router'

import AppProductsList from '@/components/ProductsList';
import AppProduct from '@/components/Product';
import AppCart from '@/components/Cart';
import AppCheckout from '@/components/Checkout';
import AppE404 from '@/components/E404';

// 2.1 Поэтому у объектов раута стараются использовать также свойство "name". Это системное имя пути, которое никак не влияет на то, что пишется в адресной строке, это просто какой-то алиас для пути.
// Go to [vue-3-course\07\src\components\Cart.vue]
const routes = [
	{
		name: 'catalog',
		path: '/',
		component: AppProductsList
	},
	{
		name: 'cart',
		path: '/cart',
		component: AppCart
	},
	{
		name: 'checkout',
		path: '/order',
		component: AppCheckout
	},
	// * 5.0 И раз уж зашла речь про динамические пути, то стоит также рассмотреть этот приём подробнее на компоненте страницы информации о конкретном товаре. Понятно, что если товаров много, то было бы как-то странно прописывать путь для каждой странички информации о каждом из них. И вот для таких сущностей есть динамические пути. Здесь мы пишем базовую часть адреса и там, где нужен динамический параметр ставится ":_любое название параметра_". И теперь если набрать в адресе: "www.domain.com/product/100", то будет открываться информация о товаре с айдишником 100. Однако ещё одной вложенности здесь не допускается "www.domain.com/product/100/1" - выдаст ошибку 404. Но идея в том, что теперь мы можем получить этот айдишник из поля $route.
	// Go to [vue-3-course\07\src\components\Product.vue]
	{
		name: 'product',
		path: '/product/:id',
		component: AppProduct
	},
	// * 4 Ещё нам нужно добавить и настроить раут компонента ошибки 404 для ситуаций, когда по адресу ничего не найдено. Делается это таким вот образом, прописывая специальный динамический путь. Система, когда пытается понять какую страницу нужно отобразить идёт по раутам сверху вниз и первый совпадающий с адресом раут признаётся активным, а если ни в один из вышеперечисленных не попадает, то признаётся активным этот динамический адрес (комп. AppE404).
	{
		path: '/:any(.*)', // сравнимо с подобным регулярным выражением /.*/ (. любой символ и * любое количество вхождений, т.е. всё что угодно под это выражение попадёт)
		component: AppE404
	}
];

// 1.4.0 Ну и здесь нам нужно экспортировать как массив с раутами, так и history с результатом работы функции createWebHistory.
// ? 1.4.1 Также в функцию createWebHistory параметром возможно передать базовый путь к нашему приложению (то, как система расположена относительно корня домена). Нам пока не требуется что-то писать, т.ч. Vue подставит туда "/" по умолчанию.
// Go to [vue-3-course\07\src\App.vue]
export default createRouter({
	routes,
	history: createWebHistory()
});
